name: Linux AppImages

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        config:
          - { os: ubuntu-24.04, arch: x86_64 }
          - { os: ubuntu-24.04-arm, arch: arm64 }
    runs-on: ${{ matrix.config.os }}
    name: Build ${{ matrix.config.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache apt packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: |
            cmake 
            dos2unix 
            zlib1g-dev
            libsdl2-2.0 
            libsdl2-mixer-2.0
            libsdl2-image-2.0 
            libsdl2-ttf-2.0
            libsdl2-dev 
            libsdl2-mixer-dev 
            libsdl2-image-dev 
            libsdl2-ttf-dev
            libgstreamer1.0 
            libgstreamer1.0-dev 
            libgstreamer-plugins-base1.0-dev
            gstreamer1.0-plugins-base 
            gstreamer1.0-plugins-good
            gstreamer1.0-libav
            libglib2.0-0 
            libglib2.0-dev 
            sqlite3 
            libminizip-dev 
            libwebp-dev 
            libusb-1.0-0
            libusb-1.0-0-dev
            libevdev-dev
          version: ${{ matrix.config.os }}

      - name: Configure CMake
        run: cmake RetroFE/Source -BRetroFE/Build

      - name: Build
        run: cmake --build RetroFE/Build

      - name: Install linuxdeploy
        run: |
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-${{ matrix.config.arch == 'arm64' && 'aarch64' || matrix.config.arch }}.AppImage -O linuxdeploy-${{ matrix.config.arch }}.AppImage
          chmod +x linuxdeploy-${{ matrix.config.arch }}.AppImage
          
      - name: Install linuxdeploy-plugin-gstreamer
        run: |
          wget https://raw.githubusercontent.com/linuxdeploy/linuxdeploy-plugin-gstreamer/refs/heads/master/linuxdeploy-plugin-gstreamer.sh
          chmod +x linuxdeploy-plugin-gstreamer.sh

      - name: Package AppImage
        run: |
          ./linuxdeploy-${{ matrix.config.arch }}.AppImage \
            --executable RetroFE/Build/retrofe \
            --appdir RetroFE/Build/AppDir \
            --plugin gstreamer \
            --output appimage \
            --desktop-file Package/Environment/Linux/retrofe.desktop \
            --icon-file Package/Environment/Common/RetroFE.png
          if [ "${{ matrix.config.arch }}" == "arm64" ]; then
            mv RetroFE-aarch64.AppImage RetroFE-arm64.AppImage
          fi
      
      - name: Upload ${{ matrix.config.arch }} Arch AppImage
        uses: actions/upload-artifact@v4
        with:
          name: RetroFE-${{ matrix.config.arch }}.AppImage
          path: RetroFE-${{ matrix.config.arch }}.AppImage
